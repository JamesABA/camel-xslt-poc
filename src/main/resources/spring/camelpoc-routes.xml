<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cxf="http://camel.apache.org/schema/cxf"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
         http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">

    <!-- Camel routing config and context -->

    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">

        <route id="contactUpdateWSRoute">
            <from uri="cxf:bean:contactUpdateWS?dataFormat=PAYLOAD"/>
            <to uri="log:com.businessagility.poc.camelpoc?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            <to uri="xslt:xslt/mapContactName.xslt"/>
            <to uri="log:com.businessagility.poc.camelpoc?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            <to uri="file://target/outputCU?fileName=contactupdate-$simple{date:now:yyyyMMdd-HHmmss}.xml"/>
            <to uri="velocity:vm/contactUpdateResponse.vm"/>
            <to uri="log:com.businessagility.poc.camelpoc?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
        </route>

        <route id="contactUpdateJMSRoute">
            <from uri="activemq:queue:camelpoc.requestQ"/>
            <to uri="log:com.businessagility.poc.camelpoc?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            <to uri="xslt:xslt/mapJMSRequest.xslt"/>
            <to uri="log:com.businessagility.poc.camelpoc?showAll=true&amp;multiline=true&amp;level=DEBUG"/>
            <to uri="file://target/outputJMS?fileName=camelpocJMS-$simple{date:now:yyyyMMdd-HHmmss}.xml"/>
            <!--<filter>-->
                <!--<xpath saxon="true">//PublicID[starts-with(text(),'cc')]</xpath>-->
                <!--<xpath saxon="true">starts-with(//PublicID/.,'cc')</xpath>-->
                <!--<to uri="activemq:queue:camelpoc.anotherQ"/>-->
            <!--</filter>-->
            <to uri="velocity:vm/camelpocJMSResponse.vm"/>
            <to uri="activemq:queue:camelpoc.responseQ"/>
        </route>


    </camelContext>

</beans>
        <!--<log message="Body: ${body}" loggerRef="logger"/>-->


<!-- JamesA Dev notes :
PAYLOAD (data format) is used for CXF endpoints here as we only need the SOAP body to work with in the Exchange object.
However, caution is required..
 After Camel version 2.8.2, 'streaming' mode is  switched on by default when using PAYLOAD data format. This is a wonderful
 setting as it avoids DOM parsing of the inbound message and increases performance significantly in some circumstances.
 Unfortunately, when using components such as XSLT transformers in the route, it 'occasionally' (read erratically) doesn't
 seem to send the whole body, causing the transform to fail unexpectedly with a spurious error.

 Further reading on streams suggests 2 options here :

 1- disable streaming via the query string (?allowStreaming=false) or by system variable.
 2- convert body to String

 -->

